#!/bin/sh

# ================================================================
# Note: this is invoked from the Makefile as "./test/run".
# If you invoke it as "test/run" or "sh test/run" then it will
# produce diff errors.
# ================================================================

# NEEDING COVERAGE:
# group-like
# head
# sort
# tail
# top
# uniq

# I/O

# ================================================================
set -e

ourdir=`dirname $0`
mlr=$ourdir/../mlr
indir=$ourdir/input
expdir=$ourdir/expected
outdir=$ourdir/output
mkdir -p $outdir

rm -f $outdir/out
touch $outdir/out
echo

num_passed=0

announce() {
	echo >> $outdir/out
	echo "================================================================" >> $outdir/out
	echo "$@" >> $outdir/out
	echo >> $outdir/out
}

run_command() {
	echo "$@"
	echo "$@" >> $outdir/out
	"$@" >> $outdir/out
	echo >> $outdir/out
	# since set -e
	num_passed=`expr $num_passed + 1`
}

# ================================================================
announce STATELESS MAPPERS

run_command $mlr cat $indir/abixy
run_command $mlr cat /dev/null

run_command $mlr cut -f a,x $indir/abixy
run_command $mlr cut --complement -f a,x $indir/abixy

run_command $mlr having-fields --at-least  a,b         $indir/abixy
run_command $mlr having-fields --at-least  a,c         $indir/abixy
run_command $mlr having-fields --at-least  a,b,i,x,y   $indir/abixy
run_command $mlr having-fields --which-are a,b,i,x     $indir/abixy
run_command $mlr having-fields --which-are a,b,i,x,y   $indir/abixy
run_command $mlr having-fields --which-are a,b,i,y,x   $indir/abixy
run_command $mlr having-fields --which-are a,b,i,x,w   $indir/abixy
run_command $mlr having-fields --which-are a,b,i,x,y,z $indir/abixy
run_command $mlr having-fields --at-most   a,c         $indir/abixy
run_command $mlr having-fields --at-most   a,b,i,x,y   $indir/abixy
run_command $mlr having-fields --at-most   a,b,i,x,y,z $indir/abixy

run_command $mlr rename b,BEE,x,EKS $indir/abixy
run_command $mlr rename nonesuch,nonesuch,x,EKS $indir/abixy

run_command $mlr regularize $indir/regularize.dkvp

# ----------------------------------------------------------------
announce TRIVIAL RETAINERS

run_command $mlr group-by a   $indir/abixy
run_command $mlr group-by a,b $indir/abixy

run_command $mlr group-like $indir/het.dkvp

run_command $mlr tac $indir/abixy
run_command $mlr tac /dev/null

# ----------------------------------------------------------------
announce SORT

run_command $mlr sort -f a   $indir/abixy
run_command $mlr sort -r a   $indir/abixy
run_command $mlr sort -f x   $indir/abixy
run_command $mlr sort -r x   $indir/abixy
run_command $mlr sort -nf x  $indir/abixy
run_command $mlr sort -nr x  $indir/abixy

run_command $mlr sort -f a,b   $indir/abixy
run_command $mlr sort -r a,b   $indir/abixy
run_command $mlr sort -f x,y   $indir/abixy
run_command $mlr sort -r x,y   $indir/abixy
run_command $mlr sort -nf x,y  $indir/abixy
run_command $mlr sort -nr x,y  $indir/abixy

run_command $mlr sort -f a -nr x $indir/abixy
run_command $mlr sort -nr y -f a $indir/abixy
run_command $mlr sort -f a -r b -nf x -nr y $indir/abixy

# ----------------------------------------------------------------
announce JOIN

run_command $mlr --opprint join                   -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u                -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join         --ul      -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u      --ul      -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join              --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u           --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --ul      --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u      --ul --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np --ul      -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np --ul      -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np      --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np      --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np --ul --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np --ul --ur -f $indir/joina.dkvp -l l -r r -j o $indir/joinb.dkvp


run_command $mlr --opprint join                   -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u                -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join         --ul      -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u      --ul      -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join              --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u           --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join         --ul --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u      --ul --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np --ul      -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np --ul      -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np      --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np      --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp

run_command $mlr --opprint join    --np --ul --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp
run_command $mlr --opprint join -u --np --ul --ur -f /dev/null -l l -r r -j o $indir/joinb.dkvp


run_command $mlr --opprint join                   -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u                -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join         --ul      -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u      --ul      -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join              --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u           --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join         --ul --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u      --ul --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join    --np --ul      -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u --np --ul      -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join    --np      --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u --np      --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null

run_command $mlr --opprint join    --np --ul --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null
run_command $mlr --opprint join -u --np --ul --ur -f $indir/joina.dkvp -l l -r r -j o /dev/null

# ----------------------------------------------------------------
announce STATS
run_command $mlr count-distinct -f a,b $indir/small $indir/abixy

run_command $mlr --opprint stats1 -a mean,sum,count,min,max,mode -f i,x,y $indir/abixy
run_command $mlr --opprint stats1 -a min,p10,p50,mode,p90,max    -f i,x,y $indir/abixy
run_command $mlr --opprint stats1 -a mean,meaneb,stddev          -f i,x,y $indir/abixy

run_command $mlr --opprint stats1 -a mean,sum,count,min,max,mode -f i,x,y -g a $indir/abixy
run_command $mlr --opprint stats1 -a min,p10,p50,mode,p90,max    -f i,x,y -g a $indir/abixy
run_command $mlr --opprint stats1 -a mean,meaneb,stddev          -f i,x,y -g a $indir/abixy

run_command $mlr --opprint stats1 -a mean,sum,count,min,max,mode -f i,x,y -g a,b $indir/abixy
run_command $mlr --opprint stats1 -a min,p10,p50,mode,p90,max    -f i,x,y -g a,b $indir/abixy
run_command $mlr --opprint stats1 -a mean,meaneb,stddev          -f i,x,y -g a,b $indir/abixy

run_command $mlr --opprint stats2 -a linreg-ols,linreg-pca,r2,corr,cov -f x,y,xy,y2,x2,x2 $indir/abixy-wide
run_command $mlr --opprint stats2 -a linreg-ols,linreg-pca,r2,corr,cov -f x,y,xy,y2,x2,x2 -g a,b $indir/abixy-wide
run_command $mlr --opprint step -a rsum,delta,counter -f x,y $indir/abixy
run_command $mlr --opprint step -a rsum,delta,counter -f x,y -g a $indir/abixy
run_command $mlr --opprint histogram -f x,y --lo 0 --hi 1 --nbins 20 $indir/small

# ----------------------------------------------------------------
announce DSLs

run_command $mlr filter '$x>.3'    $indir/abixy
run_command $mlr filter '$x>0.3'   $indir/abixy
run_command $mlr filter '$x>0.3 && $y>0.3'   $indir/abixy
run_command $mlr filter '$x>0.3 || $y>0.3'   $indir/abixy
run_command $mlr filter 'NR>=4 && NR <= 7'   $indir/abixy
# xxx more ...

run_command $mlr filter '$nosuchfield>.3'    $indir/abixy

run_command $mlr put '$x2 = $x**2' $indir/abixy
run_command $mlr put '$z = -0.024*$x+0.13' $indir/abixy
run_command $mlr put '$c = $a . $b' $indir/abixy
# xxx more ...
run_command $mlr --opprint put '$nr=NR;$fnr=FNR;$nf=NF;$filenum=FILENUM;$filename=FILENAME' $indir/abixy $indir/abixy

announce OPERATOR PRECEDENCE AND ASSOCIATIVITY

# filter -v and put -v print the AST
run_command $mlr put -v '$x=$a+$b+$c'   /dev/null
run_command $mlr put -v '$x=$a+$b-$c'   /dev/null
run_command $mlr put -v '$x=$a-$b-$c'   /dev/null
run_command $mlr put -v '$x=$a-$b+$c'   /dev/null

run_command $mlr put -v '$x=$a*$b*$c'   /dev/null
run_command $mlr put -v '$x=$a*$b/$c'   /dev/null
run_command $mlr put -v '$x=$a/$b/$c'   /dev/null
run_command $mlr put -v '$x=$a/$b*$c'   /dev/null

run_command $mlr put -v '$x=$a+$b+$c'   /dev/null
run_command $mlr put -v '$x=$a+$b*$c'   /dev/null
run_command $mlr put -v '$x=$a*$b*$c'   /dev/null
run_command $mlr put -v '$x=$a*$b+$c'   /dev/null

run_command $mlr put -v '$x=$a+$b+$c'   /dev/null
run_command $mlr put -v '$x=$a+$b**$c'  /dev/null
run_command $mlr put -v '$x=$a**$b**$c' /dev/null
run_command $mlr put -v '$x=$a**$b+$c'  /dev/null

run_command $mlr put -v '$x=$a.$b.$c'   /dev/null

run_command $mlr put -v '$x=-$a+$b*$c'  /dev/null
run_command $mlr put -v '$x=-$a*$b+$c'  /dev/null
run_command $mlr put -v '$x=$a+-$b*$c'  /dev/null
run_command $mlr put -v '$x=$a*-$b+$c'  /dev/null
run_command $mlr put -v '$x=$a+$b*-$c'  /dev/null
run_command $mlr put -v '$x=$a*$b+-$c'  /dev/null


run_command $mlr filter -v '$a==1 && $b == 1 && $c == 1'   /dev/null
run_command $mlr filter -v '$a==1 || $b == 1 && $c == 1'   /dev/null
run_command $mlr filter -v '$a==1 || $b == 1 || $c == 1'   /dev/null
run_command $mlr filter -v '$a==1 && $b == 1 || $c == 1'   /dev/null

run_command $mlr filter -v '$x<$a*$b*$c'   /dev/null
run_command $mlr filter -v '$x<$a*$b/$c'   /dev/null
run_command $mlr filter -v '$x<$a/$b/$c'   /dev/null
run_command $mlr filter -v '$x<$a/$b*$c'   /dev/null

run_command $mlr filter -v '$x<$a+$b+$c'   /dev/null
run_command $mlr filter -v '$x<$a+$b*$c'   /dev/null
run_command $mlr filter -v '$x<$a*$b*$c'   /dev/null
run_command $mlr filter -v '$x<$a*$b+$c'   /dev/null

run_command $mlr filter -v '$x<$a+$b+$c'   /dev/null
run_command $mlr filter -v '$x<$a+$b**$c'  /dev/null
run_command $mlr filter -v '$x<$a**$b**$c' /dev/null
run_command $mlr filter -v '$x<$a**$b+$c'  /dev/null

run_command $mlr filter -v '$x<$a.$b.$c'   /dev/null

run_command $mlr filter -v '$x<-$a+$b*$c'  /dev/null
run_command $mlr filter -v '$x<-$a*$b+$c'  /dev/null
run_command $mlr filter -v '$x<$a+-$b*$c'  /dev/null
run_command $mlr filter -v '$x<$a*-$b+$c'  /dev/null
run_command $mlr filter -v '$x<$a+$b*-$c'  /dev/null
run_command $mlr filter -v '$x<$a*$b+-$c'  /dev/null

run_command $mlr --csvlite put '$gmt=sec2gmt($sec)' $indir/sec2gmt
run_command $mlr --csvlite put '$sec=gmt2sec($gmt)' $indir/gmt2sec

run_command $mlr put '$z=min($x, $y)' $indir/minmax.dkvp
run_command $mlr put '$z=max($x, $y)' $indir/minmax.dkvp

run_command $mlr --opprint put '$hms=sec2hms($sec);   $resec=hms2sec($hms);   $diff=$resec-$sec' $indir/sec2xhms
run_command $mlr --opprint put '$hms=fsec2hms($sec);  $resec=hms2fsec($hms);  $diff=$resec-$sec' $indir/fsec2xhms
run_command $mlr --opprint put '$hms=sec2dhms($sec);  $resec=dhms2sec($hms);  $diff=$resec-$sec' $indir/sec2xhms
run_command $mlr --opprint put '$hms=fsec2dhms($sec); $resec=dhms2fsec($hms); $diff=$resec-$sec' $indir/fsec2xhms

# ----------------------------------------------------------------
announce CHAINING

run_command $mlr cat then cat $indir/short
run_command $mlr cat then tac $indir/short
run_command $mlr tac then cat $indir/short
run_command $mlr tac then tac $indir/short

run_command $mlr cat then cat then cat $indir/short
run_command $mlr cat then cat then tac $indir/short
run_command $mlr cat then tac then cat $indir/short
run_command $mlr cat then tac then tac $indir/short
run_command $mlr tac then cat then cat $indir/short
run_command $mlr tac then cat then tac $indir/short
run_command $mlr tac then tac then cat $indir/short
run_command $mlr tac then tac then tac $indir/short

# ----------------------------------------------------------------
announce HET-CSV INPUT

run_command $mlr --icsvlite --odkvp cat $indir/a.csv
run_command $mlr --icsvlite --odkvp cat $indir/b.csv
run_command $mlr --icsvlite --odkvp cat $indir/c.csv
run_command $mlr --icsvlite --odkvp cat $indir/d.csv
run_command $mlr --icsvlite --odkvp cat $indir/e.csv
run_command $mlr --icsvlite --odkvp cat $indir/f.csv
run_command $mlr --icsvlite --odkvp cat $indir/g.csv

run_command $mlr --icsvlite --odkvp cat $indir/a.csv $indir/a.csv
run_command $mlr --icsvlite --odkvp cat $indir/b.csv $indir/b.csv
run_command $mlr --icsvlite --odkvp cat $indir/c.csv $indir/c.csv
run_command $mlr --icsvlite --odkvp cat $indir/d.csv $indir/d.csv
run_command $mlr --icsvlite --odkvp cat $indir/e.csv $indir/e.csv
run_command $mlr --icsvlite --odkvp cat $indir/f.csv $indir/f.csv
run_command $mlr --icsvlite --odkvp cat $indir/g.csv $indir/g.csv

run_command $mlr --icsvlite --odkvp cat $indir/a.csv $indir/b.csv
run_command $mlr --icsvlite --odkvp cat $indir/b.csv $indir/c.csv
run_command $mlr --icsvlite --odkvp cat $indir/c.csv $indir/d.csv
run_command $mlr --icsvlite --odkvp cat $indir/d.csv $indir/e.csv
run_command $mlr --icsvlite --odkvp cat $indir/e.csv $indir/f.csv
run_command $mlr --icsvlite --odkvp cat $indir/f.csv $indir/g.csv

run_command $mlr --icsvlite --odkvp cat $indir/a.csv $indir/b.csv \
  $indir/c.csv $indir/d.csv $indir/e.csv $indir/f.csv $indir/g.csv

run_command $mlr --icsvlite --odkvp tac $indir/het.csv

# ----------------------------------------------------------------
announce HET-PPRINT INPUT

run_command $mlr --ipprint --odkvp cat $indir/a.pprint
run_command $mlr --ipprint --odkvp cat $indir/b.pprint
run_command $mlr --ipprint --odkvp cat $indir/c.pprint
run_command $mlr --ipprint --odkvp cat $indir/d.pprint
run_command $mlr --ipprint --odkvp cat $indir/e.pprint
run_command $mlr --ipprint --odkvp cat $indir/f.pprint
run_command $mlr --ipprint --odkvp cat $indir/g.pprint

run_command $mlr --ipprint --odkvp cat $indir/a.pprint $indir/a.pprint
run_command $mlr --ipprint --odkvp cat $indir/b.pprint $indir/b.pprint
run_command $mlr --ipprint --odkvp cat $indir/c.pprint $indir/c.pprint
run_command $mlr --ipprint --odkvp cat $indir/d.pprint $indir/d.pprint
run_command $mlr --ipprint --odkvp cat $indir/e.pprint $indir/e.pprint
run_command $mlr --ipprint --odkvp cat $indir/f.pprint $indir/f.pprint
run_command $mlr --ipprint --odkvp cat $indir/g.pprint $indir/g.pprint

run_command $mlr --ipprint --odkvp cat $indir/a.pprint $indir/b.pprint
run_command $mlr --ipprint --odkvp cat $indir/b.pprint $indir/c.pprint
run_command $mlr --ipprint --odkvp cat $indir/c.pprint $indir/d.pprint
run_command $mlr --ipprint --odkvp cat $indir/d.pprint $indir/e.pprint
run_command $mlr --ipprint --odkvp cat $indir/e.pprint $indir/f.pprint
run_command $mlr --ipprint --odkvp cat $indir/f.pprint $indir/g.pprint

run_command $mlr --ipprint --odkvp cat $indir/a.pprint $indir/b.pprint \
  $indir/c.pprint $indir/d.pprint $indir/e.pprint $indir/f.pprint $indir/g.pprint

# ================================================================
announce NULL-FIELD INPUT

run_command $mlr --icsvlite --odkvp cat $indir/null-fields.csv
run_command $mlr --inidx    --odkvp cat $indir/null-fields.nidx
run_command $mlr --idkvp    --oxtab cat $indir/missings.dkvp

# ================================================================
announce MISSING FINAL LF

#run_command $mlr --no-mmap --csvlite cat $indir/truncated.csv
#run_command $mlr           --csvlite cat $indir/truncated.csv
run_command $mlr --no-mmap --dkvp    cat $indir/truncated.dkvp
run_command $mlr           --dkvp    cat $indir/truncated.dkvp
run_command $mlr --no-mmap --nidx    cat $indir/truncated.nidx
run_command $mlr           --nidx    cat $indir/truncated.nidx
#run_command $mlr --no-mmap --pprint  cat $indir/truncated.pprint
#run_command $mlr           --pprint  cat $indir/truncated.pprint
#run_command $mlr --no-mmap --xtab    cat $indir/truncated.xtab
#run_command $mlr           --xtab    cat $indir/truncated.xtab

# ================================================================
announce UTF-8 alignment

run_command $mlr --icsvlite --opprint cat $indir/utf8-1.csv
run_command $mlr --icsvlite --opprint cat $indir/utf8-2.csv
run_command $mlr --icsvlite --oxtab   cat $indir/utf8-1.csv
run_command $mlr --icsvlite --oxtab   cat $indir/utf8-2.csv

run_command $mlr --inidx --ifs space --opprint         cat $indir/utf8-align.nidx
run_command $mlr --inidx --ifs space --opprint --right cat $indir/utf8-align.nidx
run_command $mlr --oxtab cat $indir/utf8-align.dkvp 

# ================================================================
announce RFC-CSV

run_command $mlr --csv cat $indir/rfc-csv/simple.csv
run_command $mlr --csv cat $indir/rfc-csv/simple-truncated.csv
run_command $mlr --csv cat $indir/rfc-csv/narrow.csv
run_command $mlr --csv cat $indir/rfc-csv/narrow-truncated.csv
run_command $mlr --csv cat $indir/rfc-csv/quoted-comma.csv
run_command $mlr --csv cat $indir/rfc-csv/quoted-comma-truncated.csv
run_command $mlr --csv cat $indir/rfc-csv/quoted-crlf.csv
run_command $mlr --csv cat $indir/rfc-csv/quoted-crlf-truncated.csv
run_command $mlr --csv cat $indir/rfc-csv/simple-truncated.csv $indir/rfc-csv/simple.csv

# ================================================================
diff $expdir/out $outdir/out
#diff -C5 $expdir/out $outdir/out

# ================================================================
echo ALL REGRESSION TESTS PASSED
echo Tests completed: $num_passed
